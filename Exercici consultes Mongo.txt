mongodb://localhost:27017/

> use restaurants



1. 	Escriu una consulta per mostrar tots els documents en la col·lecció Restaurants.
		> show collections
		
2. 	Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els 
	documents en la col·lecció Restaurants.
		> db.restaurants.find({}, { restaurant_id:1, name:1, borough:1, cuisine:1})
		
3. 	Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però exclou el camp _id 
	per tots els documents en la col·lecció Restaurants.
		> db.restaurants.find({}, { restaurant_id:1, name:1, borough:1, cuisine:1, _id: 0 })
		
4. 	Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però exclou el camp _id 
	per tots els documents en la col·lecció Restaurants.
		> db.restaurants.find({}, { restaurant_id:1, name:1, borough:1, "address.zipcode":1, _id: 0 })
		
5. 	Escriu una consulta per mostrar tots els restaurants que estan en el Bronx.
		> db.restaurants.find({borough: 'Bronx'})
		
6. 	Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx.
		> db.restaurants.find({borough: 'Bronx'}).limit (5)
		
7. 	Escriu una consulta per mostrar el pròxim 5 restaurants després de saltar els primers 5 del Bronx.
		> db.restaurants.find({borough: 'Bronx'}).skip(5).limit(5)
		
8. 	Escriu una consulta per trobar els restaurants que tenen un score de més de 90.
		> db.restaurants.find({"grades.score" :{$gt : 90}},{name:1})
		
9. 	Escriu una consulta per trobar els restaurants que tenen un score de més de 80 però menys que 100.
		> db.restaurants.find({"grades.score": {$gt: 90, $lt: 100}},{ name: 1 });
		
10.	Escriu una consulta per trobar els restaurants que es localitzen en valor de latitud menys de -95.754168.
		> db.restaurants.find({"address.coord.1": {$gt: -95.754168}},{ name: 1,"address.coord":1 } )

11.	Escriu una consulta de MongoDB per a trobar els restaurants que no preparen cap cuisine de 
	'American' i la seva qualificació és superior a 70 i longitud inferior a -65.754168.
		> db.restaurants.find({$and: [{ cuisine: { $not: /American/ } },{ "grades.score": { $gt: 90 } },{ "address.coord.1": { $gt: -65.754168 }}]},{ name: 1, cuisine: 1 })
		
12. Escriu una consulta per trobar els restaurants que no preparen cap cuisine de 'American' i van aconseguir un marcador més de 70 i localitzat en la longitud menys que -65.754168. 
	Nota: Fes aquesta consulta sense utilitzar $and operador.
		> db.restaurants.find({cuisine : {$ne:'American '}, "grades.score" :{$gt : 70}, "address.coord.1": {$gt: -65.754168}},{ name: 1, cuisine:1 } )
		> db.restaurants.find({cuisine : {$not: /American/}, "grades.score" :{$gt : 70}, "address.coord.1": {$gt: -65.754168}},{ name: 1, cuisine:1 } ) 
		
13. Escriu una consulta per trobar els restaurants que no preparen cap cuisine de 'American' i van obtenir un punt de grau 'A' no pertany a Brooklyn. 
	S'ha de mostrar el document segons la cuisine en ordre descendent.
		> db.restaurants.find({cuisine : {$not: /American/}, "grades.grade":'A', borough: {$not: /Brooklyn/} },{ name: 1, cuisine:1, borough:1 } )

14. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Wil' com les tres primeres lletres en el seu nom.
		> db.restaurants.find({name : {$regex: "^Wil"} },{ restaurant_id:1, name: 1, cuisine:1, borough:1 } )

15.	Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'ces' com les últimes tres lletres en el seu nom.
		> db.restaurants.find({name : {$regex: "ces$"} },{ restaurant_id:1, name: 1, cuisine:1, borough:1 } )

16. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que contenen 'Reg' com tres lletres en algun lloc en el seu nom.
		> db.restaurants.find({name : {$regex: "Reg"} },{ restaurant_id:1, name: 1, cuisine:1, borough:1 } )
		> db.restaurants.find({name : {$regex: "Reg"  , $options: "i"  } },{ restaurant_id:1, name: 1, cuisine:1, borough:1 } )
		> db.restaurants.find({name : /Reg/ },{ restaurant_id:1, name: 1, cuisine:1, borough:1 } )

17. Escriu una consulta per trobar els restaurants que pertanyen al Bronx i van preparar qualsevol plat americà o xinès.
		> db.restaurants.find({cuisine:{$in: [/American/,'Chinese'] }, borough: "Bronx" },{ name: 1, cuisine: 1,borough:1 })

18. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que pertanyen a Staten Island o Queens o Bronx o Brooklyn.
		> db.restaurants.find({borough:{$in: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn'] }},{ restaurant_id:1,name: 1, cuisine: 1,borough:1 })
		
19. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que no pertanyen a Staten Island o Queens o Bronx o Brooklyn.
		> db.restaurants.find({borough:{$nin: ['Staten Island', 'Queens', 'Bronx', 'Brooklyn'] }},{ restaurant_id:1,name: 1, cuisine: 1,borough:1 })
		

20. Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin un marcador que no és més de 10.
		> db.restaurants.find({"grades.score": {$lt:10}},{name:1,"grades.score":1,"grades.date":1})
*****





.............................................................
https://cheatography.com/isaeus/cheat-sheets/mongodb/
https://geekflare.com/es/mongodb-queries-examples/
.............................................................
{
  "_id": {
    "$oid": "67c834e58e33a627bccb9c5e"
  },
  "address": {
    "building": "1007",
    "coord": [
      -73.856077,
      40.848447
    ],
    "street": "Morris Park Ave",
    "zipcode": "10462"
  },
  "borough": "Bronx",
  "cuisine": "Bakery",
  "grades": [
    {
      "date": {
        "$date": "2014-03-03T00:00:00.000Z"
      },
      "grade": "A",
      "score": 2
    },
    {
      "date": {
        "$date": "2013-09-11T00:00:00.000Z"
      },
      "grade": "A",
      "score": 6
    },
    {
      "date": {
        "$date": "2013-01-24T00:00:00.000Z"
      },
      "grade": "A",
      "score": 10
    },
    {
      "date": {
        "$date": "2011-11-23T00:00:00.000Z"
      },
      "grade": "A",
      "score": 9
    },
    {
      "date": {
        "$date": "2011-03-10T00:00:00.000Z"
      },
      "grade": "B",
      "score": 14
    }
  ],
  "name": "Morris Park Bake Shop",
  "restaurant_id": "30075445"
}
